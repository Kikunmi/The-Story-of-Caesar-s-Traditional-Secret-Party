FizzBuzz
You are given a positive integer number n, where it is less than 100 (excluded).
For every number up to n (included):
Print Fizz if the number is divisible by 3.
Print Buzz if the number is divisible by 5.
Print FizzBuzz if the number is divisible by both 3 and 5.
Print the number if it is not divisible by 3 or 5.
Print Error if unexpected happens and stop the execution.
Write a function fizzBuzz using JavaScript that solves the above problem and satisfies the conditions.

Pseudocode ðŸ¤–â€‹
algorithm FizzBuzz, takes n, returns nothing:
	if n is not a positive integer that is less than 100:
		print Error and stop

	for each integer from 1 to n (both included):
		if the number is divisible by 3:
			print Fizz
		if the number is divisible by 5:
			print Buzz
		if the number is divisible by 3 and 5:
			print FizzBuzz
		if the number is not divisible by 3 or 5:
			print the number

For n = 0, Prints:
Error
â€‹
For n = 100, Prints:
Error
â€‹
For n = 16, Prints:
1
2
Fizz
4
Buzz
Fizz
7
8
Fizz
Buzz
11
Fizz
13
14
FizzBuzz
16
â€‹
Code ðŸ‘¾â€‹
function fizzBuzz (n)
{
  if (!Number.isInteger(n) || n < 1 || n >= 100)
  {
    console.error("Error");
    return;
  }

  for (let i = 1; i <= n; i++)
  {
    const remainderBy3 = i % 3;
    const remainderBy5 = i % 5;

    if (remainderBy3 === 0 && remainderBy5 === 0)
    {
      console.log("FizzBuzz");
    }
    else if (remainderBy3 === 0)
    {
      console.log("Fizz");
    }
    else if (remainderBy5 === 0)
    {
      console.log("Buzz");
    }
    else
    {
      console.log(i);
    }
  }
}

fizzBuzz(0);
fizzBuzz(100);
fizzBuzz(16);


Letter Count
You are given a string word consisting of alphabetical characters.
For each unique letter in the word:
Return the lower-case letter followed by the number of times it occurs in the word.
Print Error if unexpected happens and stop the execution.
Write a function letterOccurrence using JavaScript that solves the above problem and satisfies the conditions.

Pseudocode ðŸ¤–â€‹
algorithm LetterCount, takes word, returns a dictionary with letter counts:
	if word is not a string of alphabetical characters:
		print Error and stop

	create a dictionary to hold letter counts

	for each letter in word:
		if dictionary already has the letter:
	        increment the count of the letter by 1
	    else
		    set the count of the letter to 1

	return the dictionary that holds the letter counts

â€‹
For word = "Caesar42", Prints:
Error
â€‹
For word = "Caesar", Returns:
(c: 1, a: 2, e: 1, s: 1, r: 1)
â€‹
For word = "AAbaBa", Returns:
(a: 4, b: 2)
â€‹
Code ðŸ‘¾â€‹
function letterCount (word)
{
  const alphabet = "abcdefghijklmnopqrstuvwxyz";

  if (typeof word !== "string")
  {
    console.error("Error");
    return;
  }

  for (const letter of word)
  {
    if (!alphabet.includes(letter.toLowerCase()))
    {
      console.error("Error");
      return;
    }
  }

  let letterCounts = {};

  for (let letter of word)
  {
    let lowerCaseLetter = letter.toLowerCase();

    // If the letter is already in the dictionary, increment its count
    if (letterCounts[lowerCaseLetter] !== undefined)
    {
      letterCounts[lowerCaseLetter]++;
    }
    else
    {
      letterCounts[lowerCaseLetter] = 1;
    }
  }

  return letterCounts;
}

letterCount("Caesar42");
console.log(letterCount("Caesar"));
console.log(letterCount("AAbaBa"));